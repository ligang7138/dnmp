version: '3.7'
services:
  nginx:
    # image: openresty/openresty:alpine
    # image: nginx:latest
    build:
      context: nginx/
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
      # - "443"
    depends_on:
      - redis
      - php
   # deploy:
   #   replicas: 2
   #   update_config:
   #     parallelism: 2
   #     delay: 10s
   #     order: start-first
   # external_links:
   #   - php:fpm
    restart: always
    networks:
      - web-php-net
      # web-php-net:
        # ipv4_address: 172.25.0.5
    volumes:
      # - /var/www/html/:/var/www/html/:rw
      - /var/www/html/:/var/www/html/:rw
      - ./conf/nginx/conf.d:/etc/nginx/conf.d/:rw
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      # - ./conf/nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:rw
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      # - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
        #- ./conf/nginx/mime.types:/etc/nginx/mime.types:rw
      - ./log/nginx/:/var/log/nginx/:rw

  php:
    # image: php-7.3.3
    # image: ligang7138/php-7.3.3-fpm-zts-swoole
    image: ligang7138/php-7.3.8-fpm-zts-swoole-rabbitmq-mongodb
    # build: php/7.3/alpine3.9/fpm/
    # build:
    #   context: php/7.3/alpine3.9/fpm
    container_name: php-7.3
    #可以不用ports，就不占用宿主机的9000端口了，容器内部还是可以通过自己的9000通信的
    ports:
      - "9000:9000"
      - "9080:9080"
      - "9081:9081"
      - "9082:9082"
      - "9083:9083"
      - "9084:9084"
    expose:
      - "9000"
      - "9080"
      - "9081"
      - "9082"
      - "9083"
      - "9084"
    volumes:
      - /var/www/html/:/var/www/html/:rw
      - ./swoftcli:/usr/local/bin/swoftcli:rw
      # - /usr/local/bin/php:/usr/local/bin/php
      - ./conf/php/php-7.3.3.ini:/usr/local/etc/php/php.ini:rw
      # - ./conf/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/php-fpm/:/var/log/php-fpm/:rw
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      # - /usr/local/bin/composer:/usr/local/bin/composer
    #external_links:
    depends_on:
      - mysql
      - redis
    restart: always
    networks:
      - web-php-net
      # web-php-net:
        # ipv4_address: 172.25.0.6
  mysql:
    # image: mysql
    build:
      context: mariadb/
    container_name: mysql
    volumes:
      - mysqldata:/var/lib/mysql
      - ./mariadb/conf.d:/etc/mysql/conf.d:ro
      - ./mariadb/my.cnf:/etc/mysql/my.cnf:ro
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      # - ./log/mysql/:/var/log/mysql/:rw
      - mysqllog:/var/log/mysql

    ports:
      - "3306:3306"
    networks:
      - web-php-net
      # web-php-net:
        # ipv4_address: 172.25.0.7
    environment:
      MYSQL_ROOT_PASSWORD: root
    restart: always
  #redis单机
  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redisdata:/data
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
    restart: always
    ports:
      - "6379:6379"
    networks:
      - web-php-net
      # web-php-net:
        # ipv4_address: 172.25.0.8
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - web-php-net

  consul1:
    image: consul
    container_name: node1
    restart: always
    command: agent -server -bootstrap-expect=3 -node=node1 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1
    networks:
      - web-php-net

  consul2:
    image: consul
    container_name: node2
    restart: always
    command: agent -server -retry-join=node1 -node=node2 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1
    depends_on:
      - consul1
    networks:
      - web-php-net

  consul3:
    image: consul
    container_name: node3
    restart: always
    command: agent -server -retry-join=node1 -node=node3 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1
    depends_on:
      - consul1
    networks:
      - web-php-net

  consul4:
    image: consul
    container_name: node4
    restart: always
    command: agent -retry-join=node1 -node=ndoe4 -bind=0.0.0.0 -client=0.0.0.0 -datacenter=dc1 -ui
    ports:
      - 8500:8500
    depends_on:
      - consul2
      - consul3
    networks:
      - web-php-net

# #设置内部网络
# networks:
#   # lnmp-env:
#   #   driver: bridge
#   web-php-net:
#     driver: bridge
#     ipam:
#       config:
#        - subnet: 172.25.0.0/16
#使用外部网络  docker network create --driver bridge --subnet 172.25.0.0/24 --gateway 172.25.0.1 web-php-net
networks:
  web-php-net:
    external:
      name: web-php-net

#volumes:
    #db-data:
volumes:
  mysqldata:
    driver: local
  mysqllog:
    driver: local
  redisdata:
    driver: local
