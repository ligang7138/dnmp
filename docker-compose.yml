version: '3.7'
services:
  nginx:
    # image: openresty/openresty:alpine
    # image: nginx:latest
    build:
      context: nginx/
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
    depends_on:
      - redis
      - php  
      - kibana  
   # deploy:
   #   replicas: 2
   #   update_config:
   #     parallelism: 2
   #     delay: 10s
   #     order: start-first    
   # external_links:
   #   - php:fpm
    restart: always
    networks:
      # - "lnmp-env"
      elk:
        ipv4_address: 172.25.0.5
    volumes:
      - ./www/:/var/www/html/:rw
      - ./conf/nginx/conf.d:/etc/nginx/conf.d/:rw
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      # - ./conf/nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:rw
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      # - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
        #- ./conf/nginx/mime.types:/etc/nginx/mime.types:rw
      - ./log/nginx/:/var/log/nginx/:rw
 
  php:
    #image: ligang7138/php-7.3.1-fpm-alpine
    image: ligang7138/php-7.3.3-fpm-zts-swoole
    #build: ./php/php72/
    container_name: php-7.3
    #可以不用ports，就不占用宿主机的9000端口了，容器内部还是可以通过自己的9000通信的
    ports:
      - "9000:9000"      
    expose:
      - "9000"
    volumes:
      - ./www/:/var/www/html/:rw
      #- ./conf/php/php.ini:/usr/local/etc/php/php.ini:rw
      # - ./conf/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/php-fpm/:/var/log/php-fpm/:rw
    #external_links:
    depends_on:
      - mysql
      - redis
    restart: always
    networks:
      # - "lnmp-env"
      elk:
        ipv4_address: 172.25.0.8
  mysql:
    # image: mysql 
    build:
      context: mariadb/
    container_name: mysql
    volumes:
      - mysqldata:/var/lib/mysql
      - ./mariadb/conf.d:/etc/mysql/conf.d:ro
      - ./mariadb/my.cnf:/etc/mysql/my.cnf:ro
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
      # - ./log/mysql/:/var/log/mysql/:rw
      - mysqllog:/var/log/mysql
      
    ports:
      - "3306:3306"
    networks:
      # - "lnmp-env"
      elk:
        ipv4_address: 172.25.0.6
    environment:
      MYSQL_ROOT_PASSWORD: root
    restart: always  
  #redis单机
  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redisdata:/data
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
    restart: always
    ports:
      - "6379:6379"    
  # redis-cluster:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
    networks:  
      # - "lnmp-env"
      elk:
        ipv4_address: 172.25.0.7
  elasticsearch:
    build:
      context: elasticsearch/
    container_name: elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: "123456"
    networks:
      elk:
        ipv4_address: 172.25.0.2
    restart: always

  logstash:
    build:
      context: logstash/
    container_name: logstash
    volumes:
      - ./logstash/config:/usr/share/logstash/config:rw
      - ./logstash/pipeline:/usr/share/logstash/pipeline:rw
      - mysqllog:/xlogs/mysqllog:rw
      - ./log/nginx/:/var/log/nginx/:rw
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    user: "root"
    networks:
      elk:
        ipv4_address: 172.25.0.3
    depends_on:
      - elasticsearch
    restart: always

  kibana:
    build:
      context: kibana/
    container_name: kibana
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      elk:
        ipv4_address: 172.25.0.4
    depends_on:
      - elasticsearch
    restart: always

  metricbeat:
    build:
      context: metricbeat/
    container_name: metricbeat
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - ./metricbeat/modules.d:/usr/share/metricbeat/modules.d:ro
      -  /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
    user: "root"
    network_mode: host
    depends_on:
      - elasticsearch
      - kibana
      - logstash
    command: -system.hostfs=/hostfs -e
    restart: always    
  
networks:
  # lnmp-env:
  #   driver: bridge
  elk:
    driver: bridge
    ipam:
      config:
       - subnet: 172.25.0.0/16    

#volumes:
    #db-data:
volumes:
  esdata:
    driver: local
  mysqldata:
    driver: local
  mysqllog:
    driver: local
  redisdata:
    driver: local    
